version: '3.9'
services:

  owners:
    build:
      context: ./GAI_Owners
    ports:
      - "${SERVER_PORT_OWNERS}:${SERVER_PORT_OWNERS}"
    networks:
      - microservices-network
    depends_on:
      - kafka
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME_OWNERS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT_OWNERS}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_HOST}:${KAFKA_PORT}
    links:
      - kafka-ui


  cars:
    build:
      context: ./GAI_Cars
    ports:
      - "${SERVER_PORT_CARS}:${SERVER_PORT_CARS}"
    networks:
      - microservices-network
    depends_on:
      - kafka
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME_CARS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT_CARS}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_HOST}:${KAFKA_PORT}
    links:
      - kafka-ui


  docs:
    build:
      context: ./GAI_Docs
    ports:
      - "${SERVER_PORT_DOCS}:${SERVER_PORT_DOCS}"
    networks:
      - microservices-network
    depends_on:
      - kafka
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME_DOCS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT_DOCS}
      - OWNERS_SERVICE_URL=http://owners:${SERVER_PORT_OWNERS}
      - CARS_SERVICE_URL=http://cars:${SERVER_PORT_CARS}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_HOST}:${KAFKA_PORT}

    links:
      - kafka-ui


  notifications:
    build:
      context: ./GAI_Notifications
    ports:
      - "${SERVER_PORT_NOTIFICATIONS}:${SERVER_PORT_NOTIFICATIONS}"
    networks:
      - microservices-network
    depends_on:
      - kafka
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME_NOTIFICATIONS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT_NOTIFICATIONS}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_HOST}:${KAFKA_PORT}

    links:
      - kafka-ui


  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:${DB_PORT}"
    networks:
      - microservices-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    ports:
      - "2181:2181"
    networks:
      - microservices-network
    hostname: zookeeper
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-server:latest
    hostname: ${KAFKA_HOST}
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
      - "${KAFKA_JMX_PORT}:${KAFKA_JMX_PORT}"
    networks:
      - microservices-network
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://${KAFKA_HOST}:${KAFKA_PORT},OUTSIDE://localhost:${KAFKA_PORT_OUTSIDE}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:${KAFKA_PORT},OUTSIDE://0.0.0.0:${KAFKA_PORT_OUTSIDE}
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_JMX_PORT=${KAFKA_JMX_PORT}
      - KAFKA_JMX_HOSTNAME=${KAFKA_HOST}
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "${KAFKA_UI_PORT}:8080"
    networks:
      - microservices-network
    restart: always
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${KAFKA_HOST}:${KAFKA_PORT}
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper


networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data:
